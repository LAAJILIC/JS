const checkDogs = function (arr1, arr2) {
  arr1.splice(-2);
  arr1.splice(0, 1);
  console.log(arr1);

  const dogs = arr1.concat(arr2);
  console.log(dogs);
  dogs.forEach(function (move, i) {
    const check =
      move > 3
        ? `Dog number ${i + 1} is an adult, and is ${move} years old`
        : `Dog number ${i + 1} is still a puppy`;
    console.log(check);
  });
};
checkDogs([3, 5, 2, 12, 7], [4, 1, 15, 8, 3]);
checkDogs([9, 16, 6, 8, 3], [10, 5, 6, 1, 4]);

//Is in adult ??
//Methode 1
const calcAverageHumanDogsAge = function (ages) {
  const dogsInHuman = ages.map(age => (age <= 2 ? age * 2 : age * 4 + 16));
  const strictDogsAge = dogsInHuman.filter(age => age >= 18);
  const dogsAverage =
    strictDogsAge.reduce((acc, cur) => acc + cur, 0) / strictDogsAge.length;
  console.log(dogsAverage);
};
calcAverageHumanDogsAge([5, 2, 4, 1, 15, 8, 3]);
calcAverageHumanDogsAge([16, 6, 10, 5, 6, 1, 4]);
//Method 2 "chaining" (must use only one of them in order to not have reference error) 
const calcAverageHumanDogsAge = function (ages) {
  const dogsAverage = ages
    .map(age => (age <= 2 ? age * 2 : age * 4 + 16))
    .filter(age => age >= 18)
    .reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);
  console.log(dogsAverage);
};
